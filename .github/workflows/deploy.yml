name: Main Workflow
on:
  push:
    branches:
      - master

jobs:
  build:
      name: Deploy ECR
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@master

        - name: Setup node
          uses: actions/setup-node@v1
          with:
            node-version: '12.x'

        - name: Get yarn cache
          id: yarn-cache
          run: echo "::set-output name=dir::$(yarn cache dir)"

        - name: Cache yarn
          uses: actions/cache@v1
          with:
            path: ${{ steps.yarn-cache.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
                ${{ runner.os }}-yarn-
        
        - name: Install & Deploy CDK
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          run: |
            cd cdk
            yarn install
            yarn build
            yarn deploy

        # - name: Configure AWS credentials
        #   uses: aws-actions/configure-aws-credentials@v1
        #   with:
        #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     aws-region: eu-central-1

        # - name: Login to Amazon ECR
        #   id: login-ecr
        #   uses: aws-actions/amazon-ecr-login@v1

        # - name: Build, Tag, Push Image to AWS ECR 
        #   id: build-image
        #   env:
        #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #     ECR_REPOSITORY: coffee-shop-api
        #     IMAGE_TAG: ${{ github.sha }}
        #   run: |
        #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        # - name: Download task definition
        #   run: |
        #     aws ecs describe-task-definition --task-definition CoffeShopAPI --region eu-central-1 --query taskDefinition > task-definition.json

        # - name: Fill in the new image ID in the Amazon ECS task definition
        #   id: task-def
        #   uses: aws-actions/amazon-ecs-render-task-definition@v1
        #   with:
        #     task-definition: task-definition.json
        #     container-name: coffee-shop-api-container
        #     image: ${{ steps.build-image.outputs.image }}

        # - name: Deploy Amazon ECS task definition
        #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        #   with:
        #     task-definition: ${{ steps.task-def.outputs.task-definition }}
        #     service: coffee-shop-api-service
        #     cluster: coffee-shop-cluster
        #     wait-for-service-stability: true